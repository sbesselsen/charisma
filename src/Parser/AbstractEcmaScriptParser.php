<?php

namespace Charisma\Parser;

abstract class AbstractEcmaScriptParser
{
    public function parse(string $string)
    {
        $sts = array(0);
        $os = array();
        $o = 0;
        $l = strlen($string);
        if (($ml = strspn($string, '
	 ', $o)) > 0) {
            $o += $ml;
        }
        goto st0;
        st0:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $sts[] = 4;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st4;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st1:
        if ($o === $l) {
            $r0 = array_pop($os);
            return $r0;
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect end of string at line ' . $el . ', column ' . $ec);
        st2:
        if ($o === $l) {
            $r0 = array_pop($os);
            $os[] = $r0;
            array_pop($sts);
            goto gt0;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt0;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $sts[] = 49;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st49;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st3:
        if ($o === $l) {
            $r0 = array_pop($os);
            $os[] = $this->arrayOf($r0);
            array_pop($sts);
            goto gt1;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt1;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st4:
        if ($o === $l) {
            $r0 = array_pop($os);
            $os[] = $this->emptyArray($r0);
            array_pop($sts);
            goto gt1;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                goto gt1;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st5:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 51;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st51;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st6:
        if ($l > $o) {
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 95;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st95;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*) at line ' . $el . ', column ' . $ec);
        st7:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 96;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st96;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN (() at line ' . $el . ', column ' . $ec);
        st8:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 97;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st97;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN (() at line ' . $el . ', column ' . $ec);
        st9:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st10:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 101;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st101;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN (() at line ' . $el . ', column ' . $ec);
        st11:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 102;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st102;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN (() at line ' . $el . ', column ' . $ec);
        st12:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 104;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st104;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st13:
        if ($l > $o) {
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 105;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st105;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;) at line ' . $el . ', column ' . $ec);
        st14:
        if ($l > $o) {
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 107;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st107;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 106;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st106;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*) or SEMICOLON (;) at line ' . $el . ', column ' . $ec);
        st15:
        if ($l > $o) {
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 108;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st108;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;) at line ' . $el . ', column ' . $ec);
        st16:
        if ($l > $o) {
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 110;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st110;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 109;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st109;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*) or SEMICOLON (;) at line ' . $el . ', column ' . $ec);
        st17:
        if ($l > $o) {
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 111;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st111;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;) at line ' . $el . ', column ' . $ec);
        st18:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st19:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st20:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st21:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st22:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st23:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st24:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st25:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st26:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st27:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st28:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st29:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st30:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st31:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st32:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st33:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st34:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 128;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st128;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 126;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st126;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*) or PAREN_OPEN (() at line ' . $el . ', column ' . $ec);
        st35:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 128;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st128;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN (() at line ' . $el . ', column ' . $ec);
        st36:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st37:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $sts[] = 131;
                $os[] = array(']');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st131;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect BLOCK_CLOSE (]), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st38:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $sts[] = 134;
                $os[] = array('}');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st134;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 136;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st136;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+) or NUMBER_OCTAL (0x[0-9abcdefABCDEF]+) at line ' . $el . ', column ' . $ec);
        st39:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st40:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st41:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st42:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st43:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceConstantExpression($r0);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st44:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceIntegerNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), OBJECT_COLON (:), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st45:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceFloatNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), OBJECT_COLON (:), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st46:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceOctalNumberExpression($r0);
                array_pop($sts);
                goto gt4;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), OBJECT_COLON (:), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st47:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceDoubleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), OBJECT_COLON (:), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st48:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleQuotedStringExpression($r0);
                array_pop($sts);
                goto gt5;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), OBJECT_COLON (:), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st49:
        if ($o === $l) {
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $r0;
            array_pop($sts);
            array_pop($sts);
            goto gt1;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st50:
        if ($o === $l) {
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->arrayPush($r0, $r1);
            array_pop($sts);
            array_pop($sts);
            goto gt1;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt1;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st51:
        if ($o === $l) {
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceExpressionStatement($r0);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st52:
        if ($l > $o) {
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 139;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st139;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*) at line ' . $el . ', column ' . $ec);
        st53:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st54:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 142;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st142;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st55:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixIncrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st56:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePostfixDecrementExpression($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st57:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st58:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st59:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st60:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st61:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st62:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st63:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st64:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st65:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st66:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st67:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st68:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st69:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st70:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st71:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st72:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st73:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st74:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st75:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st76:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st77:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st78:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st79:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st80:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st81:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st82:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st83:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st84:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st85:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st86:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st87:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st88:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st89:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st90:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st91:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st92:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st93:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st94:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st95:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 128;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st128;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN (() at line ' . $el . ', column ' . $ec);
        st96:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st97:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st98:
        if ($l > $o) {
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 185;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st185;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect WHILE (while) at line ' . $el . ', column ' . $ec);
        st99:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $sts[] = 134;
                $os[] = array('}');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st134;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 187;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st187;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $sts[] = 4;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st4;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}), NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), PAREN_OPEN ((), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true) or FALSE (false) at line ' . $el . ', column ' . $ec);
        st100:
        if ($o === $l) {
            $r0 = array_pop($os);
            $os[] = $this->reduceSingleStatementCodeBlock($r0);
            array_pop($sts);
            goto gt6;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r0 = array_pop($os);
                $os[] = $this->reduceSingleStatementCodeBlock($r0);
                array_pop($sts);
                goto gt6;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st101:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 191;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st191;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st102:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st103:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 194;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st194;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st104:
        if ($o === $l) {
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceReturnStatement($r0);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st105:
        if ($o === $l) {
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceReturnStatement($r0);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st106:
        if ($l > $o) {
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 195;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st195;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;) at line ' . $el . ', column ' . $ec);
        st107:
        if ($o === $l) {
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceBreakStatement($r0);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st108:
        if ($o === $l) {
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceBreakStatement($r0);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st109:
        if ($l > $o) {
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 196;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st196;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;) at line ' . $el . ', column ' . $ec);
        st110:
        if ($o === $l) {
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceContinueStatement($r0);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st111:
        if ($o === $l) {
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceContinueStatement($r0);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st112:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 197;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st197;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st113:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNewExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st114:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st115:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseNotExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st116:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryPlusExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st117:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceUnaryNegationExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st118:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixIncrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st119:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reducePrefixDecrementExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st120:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceTypeofExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st121:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceVoidExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st122:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDeleteExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st123:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAwaitExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st124:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st125:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldStarExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldStarExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldStarExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldStarExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldStarExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceYieldStarExpression($r1);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st126:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 128;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st128;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN (() at line ' . $el . ', column ' . $ec);
        st127:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st128:
        if ($l > $o) {
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 201;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st201;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 203;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st203;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()) or IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*) at line ' . $el . ', column ' . $ec);
        st129:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st130:
        if ($l > $o) {
            if (substr_compare($string, ']', $o, 1) === 0) {
                $sts[] = 205;
                $os[] = array(']');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st205;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $sts[] = 206;
                $os[] = array(',');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st206;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect BLOCK_CLOSE (]) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st131:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st132:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt8;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt8;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), BLOCK_CLOSE (]) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st133:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $sts[] = 207;
                $os[] = array('}');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st207;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $sts[] = 208;
                $os[] = array(',');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st208;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st134:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st135:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt9;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt9;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st136:
        if ($l > $o) {
            if (substr_compare($string, ':', $o, 1) === 0) {
                $sts[] = 209;
                $os[] = array(':');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st209;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect OBJECT_COLON (:) at line ' . $el . ', column ' . $ec);
        st137:
        if ($l > $o) {
            if (substr_compare($string, ':', $o, 1) === 0) {
                $sts[] = 210;
                $os[] = array(':');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st210;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect OBJECT_COLON (:) at line ' . $el . ', column ' . $ec);
        st138:
        if ($l > $o) {
            if (substr_compare($string, ':', $o, 1) === 0) {
                $sts[] = 211;
                $os[] = array(':');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st211;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect OBJECT_COLON (:) at line ' . $el . ', column ' . $ec);
        st139:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st140:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $sts[] = 212;
                $os[] = array(']');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st212;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect BLOCK_CLOSE (]), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st141:
        if ($l > $o) {
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 213;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st213;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $sts[] = 214;
                $os[] = array(',');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st214;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st142:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st143:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt11;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt11;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), PAREN_CLOSE ()) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st144:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st145:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st146:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st147:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st148:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st149:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st150:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st151:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st152:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st153:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st154:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLessThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st155:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st156:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceGreaterThanOrEqualExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st157:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st158:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInstanceofExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st159:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st160:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st161:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictEqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st162:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceStrictInqualityExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st163:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st164:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st165:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st166:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalAndExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st167:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceLogicalOrExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st168:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st169:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAddAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st170:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSubtractAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st171:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceExponentAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st172:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceMultiplyAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st173:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDivideAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st174:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceModuloAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st175:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseLeftShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st176:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st177:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseUnsignedRightShiftAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st178:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseAndAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st179:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseXorAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st180:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBitwiseOrAssignmentExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st181:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $sts[] = 215;
                $os[] = array(':');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st215;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect COLON (:), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st182:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st183:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 217;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st217;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st184:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 218;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st218;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st185:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 219;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st219;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN (() at line ' . $el . ', column ' . $ec);
        st186:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $sts[] = 220;
                $os[] = array('}');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st220;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st187:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $sts[] = 209;
                $os[] = array(':');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st209;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceVariableAccessExpression($r0);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect OBJECT_COLON (:), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st188:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $sts[] = 210;
                $os[] = array(':');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st210;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect OBJECT_COLON (:), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st189:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $sts[] = 211;
                $os[] = array(':');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st211;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r0 = array_pop($os);
                $os[] = $r0;
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect OBJECT_COLON (:), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st190:
        if ($l > $o) {
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 221;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st221;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;) at line ' . $el . ', column ' . $ec);
        st191:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st192:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceExpressionStatement($r0);
                array_pop($sts);
                goto gt12;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or SEMICOLON (;) at line ' . $el . ', column ' . $ec);
        st193:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 223;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st223;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st194:
        if ($o === $l) {
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceReturnStatement($r0, $r1);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceReturnStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st195:
        if ($o === $l) {
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceBreakStatement($r0, $r1);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceBreakStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st196:
        if ($o === $l) {
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceContinueStatement($r0, $r1);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceContinueStatement($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st197:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceParenExpression($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st198:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st199:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st200:
        if ($l > $o) {
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 225;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st225;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $sts[] = 226;
                $os[] = array(',');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st226;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st201:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->emptyArray($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st202:
        if ($l > $o) {
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt13;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt13;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect COMMA (,) or PAREN_CLOSE ()) at line ' . $el . ', column ' . $ec);
        st203:
        if ($l > $o) {
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceParameterNode($r0);
                array_pop($sts);
                goto gt14;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->reduceParameterNode($r0);
                array_pop($sts);
                goto gt14;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect COMMA (,) or PAREN_CLOSE ()) at line ' . $el . ', column ' . $ec);
        st204:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceAnonymousFunctionExpression($r1, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st205:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st206:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $sts[] = 227;
                $os[] = array(']');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st227;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect BLOCK_CLOSE (]), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st207:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st208:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $sts[] = 229;
                $os[] = array('}');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st229;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 136;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st136;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+) or NUMBER_OCTAL (0x[0-9abcdefABCDEF]+) at line ' . $el . ', column ' . $ec);
        st209:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st210:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st211:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st212:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceComputedMemberAccessExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st213:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionCallExpression($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st214:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st215:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st216:
        if ($o === $l) {
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceFunctionDeclarationStatement($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st217:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st218:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st219:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st220:
        if ($o === $l) {
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceCodeBlock($r1);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt6;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceCodeBlock($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt6;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st221:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st222:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 240;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st240;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st223:
        if ($l > $o) {
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 241;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st241;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({) at line ' . $el . ', column ' . $ec);
        st224:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceNamedFunctionExpression($r1, $r2, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st225:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $r1;
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt7;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st226:
        if ($l > $o) {
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 203;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st203;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*) at line ' . $el . ', column ' . $ec);
        st227:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceArray($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st228:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt8;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt8;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), BLOCK_CLOSE (]) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st229:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObject($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_OPEN ([), BLOCK_CLOSE (]), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st230:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt9;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt9;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st231:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObjectItem($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt10;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObjectItem($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt10;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), CURLY_CLOSE (}) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st232:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObjectItem($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt10;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObjectItem($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt10;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), CURLY_CLOSE (}) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st233:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObjectItem($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt10;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceObjectItem($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt10;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), CURLY_CLOSE (}) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st234:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt11;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt11;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?), PAREN_CLOSE ()) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st235:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceConditionalExpression($r0, $r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt3;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), QUESTIONMARK (?), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), BLOCK_CLOSE (]), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), COMMA (,) or CURLY_CLOSE (}) at line ' . $el . ', column ' . $ec);
        st236:
        if ($o === $l) {
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceIfStatement($r2, $r4);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $sts[] = 243;
                $os[] = array('else');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st243;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect ELSE (else), NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st237:
        if ($o === $l) {
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceWhileStatement($r2, $r4);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceWhileStatement($r2, $r4);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st238:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 244;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st244;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st239:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $sts[] = 245;
                $os[] = array(';');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st245;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect SEMICOLON (;), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st240:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 247;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st247;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st241:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $sts[] = 250;
                $os[] = array('}');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st250;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $sts[] = 252;
                $os[] = array('case ');
                $o += 5;
                goto st252;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $sts[] = 253;
                $os[] = array('default');
                $o += 7;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st253;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $sts[] = 249;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st249;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st242:
        if ($l > $o) {
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt13;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt13;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect COMMA (,) or PAREN_CLOSE ()) at line ' . $el . ', column ' . $ec);
        st243:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st244:
        if ($o === $l) {
            $r5 = array_pop($os);
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceDoWhileStatement($r4, $r2);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceDoWhileStatement($r4, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st245:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 256;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st256;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st246:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 257;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st257;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st247:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st248:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $sts[] = 259;
                $os[] = array('}');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st259;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $sts[] = 252;
                $os[] = array('case ');
                $o += 5;
                goto st252;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $sts[] = 253;
                $os[] = array('default');
                $o += 7;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st253;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st249:
        if ($l > $o) {
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $sts[] = 252;
                $os[] = array('case ');
                $o += 5;
                goto st252;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $sts[] = 253;
                $os[] = array('default');
                $o += 7;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st253;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st250:
        if ($o === $l) {
            $r5 = array_pop($os);
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceSwitchStatement($r2);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st251:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt15;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt15;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r0 = array_pop($os);
                $os[] = $this->arrayOf($r0);
                array_pop($sts);
                goto gt15;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st252:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st253:
        if ($l > $o) {
            if (substr_compare($string, ':', $o, 1) === 0) {
                $sts[] = 263;
                $os[] = array(':');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st263;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect COLON (:) at line ' . $el . ', column ' . $ec);
        st254:
        if ($o === $l) {
            $r6 = array_pop($os);
            $r5 = array_pop($os);
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceIfStatement($r2, $r4, $r6);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceIfStatement($r2, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st255:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $sts[] = 264;
                $os[] = array(')');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st264;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect PAREN_CLOSE ()), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st256:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st257:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st258:
        if ($o === $l) {
            $r6 = array_pop($os);
            $r5 = array_pop($os);
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r4, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st259:
        if ($o === $l) {
            $r6 = array_pop($os);
            $r5 = array_pop($os);
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceSwitchStatement($r2, $r5);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r5);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st260:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt15;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt15;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->arrayPush($r0, $r1);
                array_pop($sts);
                array_pop($sts);
                goto gt15;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st261:
        if ($l > $o) {
            if (substr_compare($string, '}', $o, 1) === 0) {
                $sts[] = 267;
                $os[] = array('}');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st267;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $sts[] = 252;
                $os[] = array('case ');
                $o += 5;
                goto st252;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $sts[] = 253;
                $os[] = array('default');
                $o += 7;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st253;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st262:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 54;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st54;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 53;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st53;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $sts[] = 94;
                $os[] = array('?');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st94;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $sts[] = 268;
                $os[] = array(':');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st268;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $sts[] = 74;
                $os[] = array('===');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st74;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $sts[] = 75;
                $os[] = array('!==');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st75;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $sts[] = 72;
                $os[] = array('==');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st72;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $sts[] = 73;
                $os[] = array('!=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st73;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $sts[] = 81;
                $os[] = array('=');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st81;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $sts[] = 88;
                $os[] = array('<<=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st88;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $sts[] = 63;
                $os[] = array('<<');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st63;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $sts[] = 67;
                $os[] = array('<=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st67;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $sts[] = 66;
                $os[] = array('<');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st66;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $sts[] = 90;
                $os[] = array('>>>=');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st90;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $sts[] = 65;
                $os[] = array('>>>');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st65;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $sts[] = 89;
                $os[] = array('>>=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st89;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $sts[] = 64;
                $os[] = array('>>');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st64;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $sts[] = 69;
                $os[] = array('>=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st69;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $sts[] = 68;
                $os[] = array('>');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st68;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $sts[] = 79;
                $os[] = array('&&');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st79;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $sts[] = 80;
                $os[] = array('||');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st80;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $sts[] = 91;
                $os[] = array('&=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st91;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $sts[] = 76;
                $os[] = array('&');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st76;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $sts[] = 92;
                $os[] = array('^=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st92;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $sts[] = 77;
                $os[] = array('^');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st77;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $sts[] = 93;
                $os[] = array('|=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st93;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $sts[] = 78;
                $os[] = array('|');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st78;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 55;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st55;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $sts[] = 82;
                $os[] = array('+=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st82;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 61;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st61;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 56;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st56;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $sts[] = 83;
                $os[] = array('-=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st83;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 62;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st62;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $sts[] = 85;
                $os[] = array('*=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st85;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $sts[] = 84;
                $os[] = array('**=');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st84;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $sts[] = 57;
                $os[] = array('**');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st57;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $sts[] = 58;
                $os[] = array('*');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st58;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $sts[] = 86;
                $os[] = array('/=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st86;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $sts[] = 59;
                $os[] = array('/');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st59;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $sts[] = 52;
                $os[] = array('.');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st52;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $sts[] = 87;
                $os[] = array('%=');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st87;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $sts[] = 60;
                $os[] = array('%');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st60;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $sts[] = 71;
                $os[] = array('instanceof ');
                $o += 11;
                goto st71;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $sts[] = 70;
                $os[] = array('in ');
                $o += 3;
                goto st70;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect COLON (:), DOT (.), BLOCK_OPEN ([), PAREN_OPEN ((), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=) or QUESTIONMARK (?) at line ' . $el . ', column ' . $ec);
        st263:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchDefault($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchDefault($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchDefault($r0);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $sts[] = 4;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st4;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st264:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 99;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st99;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect CURLY_OPEN ({), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*") or STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\') at line ' . $el . ', column ' . $ec);
        st265:
        if ($o === $l) {
            $r7 = array_pop($os);
            $r6 = array_pop($os);
            $r5 = array_pop($os);
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st266:
        if ($o === $l) {
            $r7 = array_pop($os);
            $r6 = array_pop($os);
            $r5 = array_pop($os);
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r3, $r5, $r7);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st267:
        if ($o === $l) {
            $r7 = array_pop($os);
            $r6 = array_pop($os);
            $r5 = array_pop($os);
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceSwitchStatement($r2, $r6);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchStatement($r2, $r6);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st268:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchCase($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchCase($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchCase($r1);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $sts[] = 4;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st4;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st269:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchDefault($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchDefault($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchDefault($r0, $r2);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $sts[] = 49;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st49;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        st270:
        if ($o === $l) {
            $r8 = array_pop($os);
            $r7 = array_pop($os);
            $r6 = array_pop($os);
            $r5 = array_pop($os);
            $r4 = array_pop($os);
            $r3 = array_pop($os);
            $r2 = array_pop($os);
            $r1 = array_pop($os);
            $r0 = array_pop($os);
            $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            array_pop($sts);
            goto gt2;
        }
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ')', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ']', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '?', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ':', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ',', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, ';', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '===', $o, 3) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!==', $o, 3) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '==', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '=', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<=', $o, 3) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<<', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '<', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>=', $o, 4) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>>', $o, 3) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>=', $o, 3) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>>', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '>', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&&', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '||', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '&', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '^', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '|', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**=', $o, 3) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '**', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '*', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '/', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '.', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%=', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '%', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'else', $o, 4) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'instanceof ', $o, 11) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'in ', $o, 3) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $r8 = array_pop($os);
                $r7 = array_pop($os);
                $r6 = array_pop($os);
                $r5 = array_pop($os);
                $r4 = array_pop($os);
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceForStatement($r2, $r4, $r6, $r8);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt2;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), end of string, CURLY_CLOSE (}), CASE_ (casespace), DEFAULT (default), ELSE (else), SEMICOLON (;), PAREN_CLOSE ()), COLON (:), DOT (.), BLOCK_CLOSE (]), INCREMENT (++), DECREMENT (--), EXPONENT (**), MULTIPLY (*), DIVIDE (/), MODULO (%), ADD (+), SUBTRACT (-), SHIFT_LEFT (<<), SHIFT_RIGHT (>>), SHIFT_RIGHT_UNSIGNED (>>>), LT (<), LTE (<=), GT (>), GTE (>=), IN_ (inspace), INSTANCEOF_ (instanceofspace), EQ (==), NEQ (!=), STRICT_EQ (===), STRICT_NEQ (!==), BITWISE_AND (&), BITWISE_XOR (^), BITWISE_OR (|), AND (&&), OR (||), ASSIGN (=), ADD_ASSIGN (+=), SUBTRACT_ASSIGN (-=), EXPONENT_ASSIGN (**=), MULTIPLY_ASSIGN (*=), DIVIDE_ASSIGN (/=), MODULO_ASSIGN (%=), SHIFT_LEFT_ASSIGN (<<=), SHIFT_RIGHT_ASSIGN (>>=), SHIFT_RIGHT_UNSIGNED_ASSIGN (>>>=), BITWISE_AND_ASSIGN (&=), BITWISE_XOR_ASSIGN (^=), BITWISE_OR_ASSIGN (|=), QUESTIONMARK (?) or COMMA (,) at line ' . $el . ', column ' . $ec);
        st271:
        if ($l > $o) {
            if (substr_compare($string, '(', $o, 1) === 0) {
                $sts[] = 18;
                $os[] = array('(');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st18;
            }
            if (substr_compare($string, '[', $o, 1) === 0) {
                $sts[] = 37;
                $os[] = array('[');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st37;
            }
            if (substr_compare($string, '{', $o, 1) === 0) {
                $sts[] = 38;
                $os[] = array('{');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st38;
            }
            if (substr_compare($string, '}', $o, 1) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchCase($r1, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, '!', $o, 1) === 0) {
                $sts[] = 21;
                $os[] = array('!');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st21;
            }
            if (substr_compare($string, '++', $o, 2) === 0) {
                $sts[] = 25;
                $os[] = array('++');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st25;
            }
            if (substr_compare($string, '+', $o, 1) === 0) {
                $sts[] = 23;
                $os[] = array('+');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st23;
            }
            if (substr_compare($string, '--', $o, 2) === 0) {
                $sts[] = 26;
                $os[] = array('--');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st26;
            }
            if (substr_compare($string, '-', $o, 1) === 0) {
                $sts[] = 24;
                $os[] = array('-');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st24;
            }
            if (substr_compare($string, '~', $o, 1) === 0) {
                $sts[] = 22;
                $os[] = array('~');
                $o += 1;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st22;
            }
            if (substr_compare($string, 'if', $o, 2) === 0) {
                $sts[] = 7;
                $os[] = array('if');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st7;
            }
            if (substr_compare($string, 'while', $o, 5) === 0) {
                $sts[] = 8;
                $os[] = array('while');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st8;
            }
            if (substr_compare($string, 'do', $o, 2) === 0) {
                $sts[] = 9;
                $os[] = array('do');
                $o += 2;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st9;
            }
            if (substr_compare($string, 'for', $o, 3) === 0) {
                $sts[] = 10;
                $os[] = array('for');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st10;
            }
            if (substr_compare($string, 'switch', $o, 6) === 0) {
                $sts[] = 11;
                $os[] = array('switch');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st11;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 6;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st6;
            }
            if (substr_compare($string, 'function ', $o, 9) === 0) {
                $sts[] = 34;
                $os[] = array('function ');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st34;
            }
            if (substr_compare($string, 'function', $o, 8) === 0) {
                $sts[] = 35;
                $os[] = array('function');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st35;
            }
            if (substr_compare($string, 'new ', $o, 4) === 0) {
                $sts[] = 20;
                $os[] = array('new ');
                $o += 4;
                goto st20;
            }
            if (substr_compare($string, 'return ', $o, 7) === 0) {
                $sts[] = 12;
                $os[] = array('return ');
                $o += 7;
                goto st12;
            }
            if (substr_compare($string, 'delete ', $o, 7) === 0) {
                $sts[] = 29;
                $os[] = array('delete ');
                $o += 7;
                goto st29;
            }
            if (substr_compare($string, 'typeof ', $o, 7) === 0) {
                $sts[] = 27;
                $os[] = array('typeof ');
                $o += 7;
                goto st27;
            }
            if (substr_compare($string, 'void ', $o, 5) === 0) {
                $sts[] = 28;
                $os[] = array('void ');
                $o += 5;
                goto st28;
            }
            if (substr_compare($string, 'await ', $o, 6) === 0) {
                $sts[] = 30;
                $os[] = array('await ');
                $o += 6;
                goto st30;
            }
            if (substr_compare($string, 'yield* ', $o, 7) === 0) {
                $sts[] = 32;
                $os[] = array('yield* ');
                $o += 7;
                goto st32;
            }
            if (substr_compare($string, 'yield ', $o, 6) === 0) {
                $sts[] = 31;
                $os[] = array('yield ');
                $o += 6;
                goto st31;
            }
            if (substr_compare($string, 'case ', $o, 5) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchCase($r1, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, 'default', $o, 7) === 0) {
                $r3 = array_pop($os);
                $r2 = array_pop($os);
                $r1 = array_pop($os);
                $r0 = array_pop($os);
                $os[] = $this->reduceSwitchCase($r1, $r3);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                array_pop($sts);
                goto gt16;
            }
            if (substr_compare($string, 'null', $o, 4) === 0) {
                $sts[] = 39;
                $os[] = array('null');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st39;
            }
            if (substr_compare($string, 'undefined', $o, 9) === 0) {
                $sts[] = 40;
                $os[] = array('undefined');
                $o += 9;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st40;
            }
            if (substr_compare($string, 'NaN', $o, 3) === 0) {
                $sts[] = 41;
                $os[] = array('NaN');
                $o += 3;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st41;
            }
            if (substr_compare($string, 'true', $o, 4) === 0) {
                $sts[] = 42;
                $os[] = array('true');
                $o += 4;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st42;
            }
            if (substr_compare($string, 'false', $o, 5) === 0) {
                $sts[] = 43;
                $os[] = array('false');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st43;
            }
            if (substr_compare($string, 'return', $o, 6) === 0) {
                $sts[] = 13;
                $os[] = array('return');
                $o += 6;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st13;
            }
            if (substr_compare($string, 'break ', $o, 6) === 0) {
                $sts[] = 14;
                $os[] = array('break ');
                $o += 6;
                goto st14;
            }
            if (substr_compare($string, 'break', $o, 5) === 0) {
                $sts[] = 15;
                $os[] = array('break');
                $o += 5;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st15;
            }
            if (substr_compare($string, 'continue ', $o, 9) === 0) {
                $sts[] = 16;
                $os[] = array('continue ');
                $o += 9;
                goto st16;
            }
            if (substr_compare($string, 'continue', $o, 8) === 0) {
                $sts[] = 17;
                $os[] = array('continue');
                $o += 8;
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st17;
            }
            if (preg_match('([a-zA-Z_$][a-zA-Z_0-9$]*)ADs', $string, $m, 0, $o)) {
                $sts[] = 19;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st19;
            }
            if (preg_match('("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*")ADs', $string, $m, 0, $o)) {
                $sts[] = 47;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st47;
            }
            if (preg_match('(\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\')ADs', $string, $m, 0, $o)) {
                $sts[] = 48;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st48;
            }
            if (preg_match('(0x[0-9abcdefABCDEF]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 46;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st46;
            }
            if (preg_match('([0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 44;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st44;
            }
            if (preg_match('([0-9]+\\.[0-9]+)ADs', $string, $m, 0, $o)) {
                $sts[] = 45;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st45;
            }
            if (preg_match('((\\s+|/\\/*.*?\\*/|//[^\\n]*)+)ADs', $string, $m, 0, $o)) {
                $sts[] = 49;
                $os[] = $m;
                $o += strlen($m[0]);
                if (($ml = strspn($string, '
	 ', $o)) > 0) {
                    $o += $ml;
                }
                goto st49;
            }
        }
        $els = explode("\n", substr($string, 0, $o));
        $el = count($els);
        $ec = strlen(array_pop($els)) + 1;
        throw new \Exception('Expect NONCODE ((\\s+|/\\/*.*?\\*/|//[^\\n]*)+), PRIO_FUNCTION_ (functionspace), IF (if), WHILE (while), DO (do), FOR (for), SWITCH (switch), RETURN_ (returnspace), RETURN (return), BREAK_ (breakspace), BREAK (break), CONTINUE_ (continuespace), CONTINUE (continue), PAREN_OPEN ((), IDENTIFIER ([a-zA-Z_$][a-zA-Z_0-9$]*), NEW_ (newspace), NOT (!), TILDE (~), UNARY_PLUS (+), UNARY_NEGATION (-), PREFIX_INCREMENT (++), PREFIX_DECREMENT (--), TYPEOF_ (typeofspace), VOID_ (voidspace), DELETE_ (deletespace), AWAIT_ (awaitspace), YIELD_ (yieldspace), YIELD_STAR_ (yield*space), FUNCTION_ (functionspace), FUNCTION (function), BLOCK_OPEN ([), CURLY_OPEN ({), NULL (null), UNDEFINED (undefined), NAN (NaN), TRUE (true), FALSE (false), NUMBER_INTEGER ([0-9]+), NUMBER_FLOAT ([0-9]+\\.[0-9]+), NUMBER_OCTAL (0x[0-9abcdefABCDEF]+), STRING_DOUBLEQUOTE ("([^\\\\"]+|\\\\\\\\|\\\\"|\\\\[^"])*"), STRING_SINGLEQUOTE (\'([^\\\\\']+|\\\\\\\\|\\\\\'|\\\\[^\'])*\'), CURLY_CLOSE (}), CASE_ (casespace) or DEFAULT (default) at line ' . $el . ', column ' . $ec);
        gt0:
        switch ($sts[count($sts) - 1]) {
            case 0:
                $sts[] = 1;
                goto st1;
            case 99:
                $sts[] = 186;
                goto st186;
        }
        gt1:
        switch ($sts[count($sts) - 1]) {
            case 0:
                $sts[] = 2;
                goto st2;
            case 99:
                $sts[] = 2;
                goto st2;
            case 263:
                $sts[] = 269;
                goto st269;
            case 268:
                $sts[] = 271;
                goto st271;
        }
        gt2:
        switch ($sts[count($sts) - 1]) {
            case 0:
                $sts[] = 3;
                goto st3;
            case 2:
                $sts[] = 50;
                goto st50;
            case 9:
                $sts[] = 100;
                goto st100;
            case 99:
                $sts[] = 3;
                goto st3;
            case 127:
                $sts[] = 100;
                goto st100;
            case 129:
                $sts[] = 100;
                goto st100;
            case 182:
                $sts[] = 100;
                goto st100;
            case 198:
                $sts[] = 100;
                goto st100;
            case 217:
                $sts[] = 100;
                goto st100;
            case 218:
                $sts[] = 100;
                goto st100;
            case 243:
                $sts[] = 100;
                goto st100;
            case 247:
                $sts[] = 100;
                goto st100;
            case 256:
                $sts[] = 100;
                goto st100;
            case 257:
                $sts[] = 100;
                goto st100;
            case 263:
                $sts[] = 3;
                goto st3;
            case 264:
                $sts[] = 100;
                goto st100;
            case 268:
                $sts[] = 3;
                goto st3;
            case 269:
                $sts[] = 50;
                goto st50;
            case 271:
                $sts[] = 50;
                goto st50;
        }
        gt3:
        switch ($sts[count($sts) - 1]) {
            case 0:
                $sts[] = 5;
                goto st5;
            case 2:
                $sts[] = 5;
                goto st5;
            case 9:
                $sts[] = 5;
                goto st5;
            case 12:
                $sts[] = 103;
                goto st103;
            case 18:
                $sts[] = 112;
                goto st112;
            case 20:
                $sts[] = 113;
                goto st113;
            case 21:
                $sts[] = 114;
                goto st114;
            case 22:
                $sts[] = 115;
                goto st115;
            case 23:
                $sts[] = 116;
                goto st116;
            case 24:
                $sts[] = 117;
                goto st117;
            case 25:
                $sts[] = 118;
                goto st118;
            case 26:
                $sts[] = 119;
                goto st119;
            case 27:
                $sts[] = 120;
                goto st120;
            case 28:
                $sts[] = 121;
                goto st121;
            case 29:
                $sts[] = 122;
                goto st122;
            case 30:
                $sts[] = 123;
                goto st123;
            case 31:
                $sts[] = 124;
                goto st124;
            case 32:
                $sts[] = 125;
                goto st125;
            case 37:
                $sts[] = 132;
                goto st132;
            case 53:
                $sts[] = 140;
                goto st140;
            case 54:
                $sts[] = 143;
                goto st143;
            case 57:
                $sts[] = 144;
                goto st144;
            case 58:
                $sts[] = 145;
                goto st145;
            case 59:
                $sts[] = 146;
                goto st146;
            case 60:
                $sts[] = 147;
                goto st147;
            case 61:
                $sts[] = 148;
                goto st148;
            case 62:
                $sts[] = 149;
                goto st149;
            case 63:
                $sts[] = 150;
                goto st150;
            case 64:
                $sts[] = 151;
                goto st151;
            case 65:
                $sts[] = 152;
                goto st152;
            case 66:
                $sts[] = 153;
                goto st153;
            case 67:
                $sts[] = 154;
                goto st154;
            case 68:
                $sts[] = 155;
                goto st155;
            case 69:
                $sts[] = 156;
                goto st156;
            case 70:
                $sts[] = 157;
                goto st157;
            case 71:
                $sts[] = 158;
                goto st158;
            case 72:
                $sts[] = 159;
                goto st159;
            case 73:
                $sts[] = 160;
                goto st160;
            case 74:
                $sts[] = 161;
                goto st161;
            case 75:
                $sts[] = 162;
                goto st162;
            case 76:
                $sts[] = 163;
                goto st163;
            case 77:
                $sts[] = 164;
                goto st164;
            case 78:
                $sts[] = 165;
                goto st165;
            case 79:
                $sts[] = 166;
                goto st166;
            case 80:
                $sts[] = 167;
                goto st167;
            case 81:
                $sts[] = 168;
                goto st168;
            case 82:
                $sts[] = 169;
                goto st169;
            case 83:
                $sts[] = 170;
                goto st170;
            case 84:
                $sts[] = 171;
                goto st171;
            case 85:
                $sts[] = 172;
                goto st172;
            case 86:
                $sts[] = 173;
                goto st173;
            case 87:
                $sts[] = 174;
                goto st174;
            case 88:
                $sts[] = 175;
                goto st175;
            case 89:
                $sts[] = 176;
                goto st176;
            case 90:
                $sts[] = 177;
                goto st177;
            case 91:
                $sts[] = 178;
                goto st178;
            case 92:
                $sts[] = 179;
                goto st179;
            case 93:
                $sts[] = 180;
                goto st180;
            case 94:
                $sts[] = 181;
                goto st181;
            case 96:
                $sts[] = 183;
                goto st183;
            case 97:
                $sts[] = 184;
                goto st184;
            case 99:
                $sts[] = 5;
                goto st5;
            case 101:
                $sts[] = 192;
                goto st192;
            case 102:
                $sts[] = 193;
                goto st193;
            case 127:
                $sts[] = 5;
                goto st5;
            case 129:
                $sts[] = 5;
                goto st5;
            case 182:
                $sts[] = 5;
                goto st5;
            case 191:
                $sts[] = 222;
                goto st222;
            case 198:
                $sts[] = 5;
                goto st5;
            case 206:
                $sts[] = 228;
                goto st228;
            case 209:
                $sts[] = 231;
                goto st231;
            case 210:
                $sts[] = 232;
                goto st232;
            case 211:
                $sts[] = 233;
                goto st233;
            case 214:
                $sts[] = 234;
                goto st234;
            case 215:
                $sts[] = 235;
                goto st235;
            case 217:
                $sts[] = 5;
                goto st5;
            case 218:
                $sts[] = 5;
                goto st5;
            case 219:
                $sts[] = 238;
                goto st238;
            case 221:
                $sts[] = 239;
                goto st239;
            case 240:
                $sts[] = 246;
                goto st246;
            case 243:
                $sts[] = 5;
                goto st5;
            case 245:
                $sts[] = 255;
                goto st255;
            case 247:
                $sts[] = 5;
                goto st5;
            case 252:
                $sts[] = 262;
                goto st262;
            case 256:
                $sts[] = 5;
                goto st5;
            case 257:
                $sts[] = 5;
                goto st5;
            case 263:
                $sts[] = 5;
                goto st5;
            case 264:
                $sts[] = 5;
                goto st5;
            case 268:
                $sts[] = 5;
                goto st5;
            case 269:
                $sts[] = 5;
                goto st5;
            case 271:
                $sts[] = 5;
                goto st5;
        }
        gt4:
        switch ($sts[count($sts) - 1]) {
            case 0:
                $sts[] = 33;
                goto st33;
            case 2:
                $sts[] = 33;
                goto st33;
            case 9:
                $sts[] = 33;
                goto st33;
            case 12:
                $sts[] = 33;
                goto st33;
            case 18:
                $sts[] = 33;
                goto st33;
            case 20:
                $sts[] = 33;
                goto st33;
            case 21:
                $sts[] = 33;
                goto st33;
            case 22:
                $sts[] = 33;
                goto st33;
            case 23:
                $sts[] = 33;
                goto st33;
            case 24:
                $sts[] = 33;
                goto st33;
            case 25:
                $sts[] = 33;
                goto st33;
            case 26:
                $sts[] = 33;
                goto st33;
            case 27:
                $sts[] = 33;
                goto st33;
            case 28:
                $sts[] = 33;
                goto st33;
            case 29:
                $sts[] = 33;
                goto st33;
            case 30:
                $sts[] = 33;
                goto st33;
            case 31:
                $sts[] = 33;
                goto st33;
            case 32:
                $sts[] = 33;
                goto st33;
            case 37:
                $sts[] = 33;
                goto st33;
            case 38:
                $sts[] = 138;
                goto st138;
            case 53:
                $sts[] = 33;
                goto st33;
            case 54:
                $sts[] = 33;
                goto st33;
            case 57:
                $sts[] = 33;
                goto st33;
            case 58:
                $sts[] = 33;
                goto st33;
            case 59:
                $sts[] = 33;
                goto st33;
            case 60:
                $sts[] = 33;
                goto st33;
            case 61:
                $sts[] = 33;
                goto st33;
            case 62:
                $sts[] = 33;
                goto st33;
            case 63:
                $sts[] = 33;
                goto st33;
            case 64:
                $sts[] = 33;
                goto st33;
            case 65:
                $sts[] = 33;
                goto st33;
            case 66:
                $sts[] = 33;
                goto st33;
            case 67:
                $sts[] = 33;
                goto st33;
            case 68:
                $sts[] = 33;
                goto st33;
            case 69:
                $sts[] = 33;
                goto st33;
            case 70:
                $sts[] = 33;
                goto st33;
            case 71:
                $sts[] = 33;
                goto st33;
            case 72:
                $sts[] = 33;
                goto st33;
            case 73:
                $sts[] = 33;
                goto st33;
            case 74:
                $sts[] = 33;
                goto st33;
            case 75:
                $sts[] = 33;
                goto st33;
            case 76:
                $sts[] = 33;
                goto st33;
            case 77:
                $sts[] = 33;
                goto st33;
            case 78:
                $sts[] = 33;
                goto st33;
            case 79:
                $sts[] = 33;
                goto st33;
            case 80:
                $sts[] = 33;
                goto st33;
            case 81:
                $sts[] = 33;
                goto st33;
            case 82:
                $sts[] = 33;
                goto st33;
            case 83:
                $sts[] = 33;
                goto st33;
            case 84:
                $sts[] = 33;
                goto st33;
            case 85:
                $sts[] = 33;
                goto st33;
            case 86:
                $sts[] = 33;
                goto st33;
            case 87:
                $sts[] = 33;
                goto st33;
            case 88:
                $sts[] = 33;
                goto st33;
            case 89:
                $sts[] = 33;
                goto st33;
            case 90:
                $sts[] = 33;
                goto st33;
            case 91:
                $sts[] = 33;
                goto st33;
            case 92:
                $sts[] = 33;
                goto st33;
            case 93:
                $sts[] = 33;
                goto st33;
            case 94:
                $sts[] = 33;
                goto st33;
            case 96:
                $sts[] = 33;
                goto st33;
            case 97:
                $sts[] = 33;
                goto st33;
            case 99:
                $sts[] = 189;
                goto st189;
            case 101:
                $sts[] = 33;
                goto st33;
            case 102:
                $sts[] = 33;
                goto st33;
            case 127:
                $sts[] = 33;
                goto st33;
            case 129:
                $sts[] = 33;
                goto st33;
            case 182:
                $sts[] = 33;
                goto st33;
            case 191:
                $sts[] = 33;
                goto st33;
            case 198:
                $sts[] = 33;
                goto st33;
            case 206:
                $sts[] = 33;
                goto st33;
            case 208:
                $sts[] = 138;
                goto st138;
            case 209:
                $sts[] = 33;
                goto st33;
            case 210:
                $sts[] = 33;
                goto st33;
            case 211:
                $sts[] = 33;
                goto st33;
            case 214:
                $sts[] = 33;
                goto st33;
            case 215:
                $sts[] = 33;
                goto st33;
            case 217:
                $sts[] = 33;
                goto st33;
            case 218:
                $sts[] = 33;
                goto st33;
            case 219:
                $sts[] = 33;
                goto st33;
            case 221:
                $sts[] = 33;
                goto st33;
            case 240:
                $sts[] = 33;
                goto st33;
            case 243:
                $sts[] = 33;
                goto st33;
            case 245:
                $sts[] = 33;
                goto st33;
            case 247:
                $sts[] = 33;
                goto st33;
            case 252:
                $sts[] = 33;
                goto st33;
            case 256:
                $sts[] = 33;
                goto st33;
            case 257:
                $sts[] = 33;
                goto st33;
            case 263:
                $sts[] = 33;
                goto st33;
            case 264:
                $sts[] = 33;
                goto st33;
            case 268:
                $sts[] = 33;
                goto st33;
            case 269:
                $sts[] = 33;
                goto st33;
            case 271:
                $sts[] = 33;
                goto st33;
        }
        gt5:
        switch ($sts[count($sts) - 1]) {
            case 0:
                $sts[] = 36;
                goto st36;
            case 2:
                $sts[] = 36;
                goto st36;
            case 9:
                $sts[] = 36;
                goto st36;
            case 12:
                $sts[] = 36;
                goto st36;
            case 18:
                $sts[] = 36;
                goto st36;
            case 20:
                $sts[] = 36;
                goto st36;
            case 21:
                $sts[] = 36;
                goto st36;
            case 22:
                $sts[] = 36;
                goto st36;
            case 23:
                $sts[] = 36;
                goto st36;
            case 24:
                $sts[] = 36;
                goto st36;
            case 25:
                $sts[] = 36;
                goto st36;
            case 26:
                $sts[] = 36;
                goto st36;
            case 27:
                $sts[] = 36;
                goto st36;
            case 28:
                $sts[] = 36;
                goto st36;
            case 29:
                $sts[] = 36;
                goto st36;
            case 30:
                $sts[] = 36;
                goto st36;
            case 31:
                $sts[] = 36;
                goto st36;
            case 32:
                $sts[] = 36;
                goto st36;
            case 37:
                $sts[] = 36;
                goto st36;
            case 38:
                $sts[] = 137;
                goto st137;
            case 53:
                $sts[] = 36;
                goto st36;
            case 54:
                $sts[] = 36;
                goto st36;
            case 57:
                $sts[] = 36;
                goto st36;
            case 58:
                $sts[] = 36;
                goto st36;
            case 59:
                $sts[] = 36;
                goto st36;
            case 60:
                $sts[] = 36;
                goto st36;
            case 61:
                $sts[] = 36;
                goto st36;
            case 62:
                $sts[] = 36;
                goto st36;
            case 63:
                $sts[] = 36;
                goto st36;
            case 64:
                $sts[] = 36;
                goto st36;
            case 65:
                $sts[] = 36;
                goto st36;
            case 66:
                $sts[] = 36;
                goto st36;
            case 67:
                $sts[] = 36;
                goto st36;
            case 68:
                $sts[] = 36;
                goto st36;
            case 69:
                $sts[] = 36;
                goto st36;
            case 70:
                $sts[] = 36;
                goto st36;
            case 71:
                $sts[] = 36;
                goto st36;
            case 72:
                $sts[] = 36;
                goto st36;
            case 73:
                $sts[] = 36;
                goto st36;
            case 74:
                $sts[] = 36;
                goto st36;
            case 75:
                $sts[] = 36;
                goto st36;
            case 76:
                $sts[] = 36;
                goto st36;
            case 77:
                $sts[] = 36;
                goto st36;
            case 78:
                $sts[] = 36;
                goto st36;
            case 79:
                $sts[] = 36;
                goto st36;
            case 80:
                $sts[] = 36;
                goto st36;
            case 81:
                $sts[] = 36;
                goto st36;
            case 82:
                $sts[] = 36;
                goto st36;
            case 83:
                $sts[] = 36;
                goto st36;
            case 84:
                $sts[] = 36;
                goto st36;
            case 85:
                $sts[] = 36;
                goto st36;
            case 86:
                $sts[] = 36;
                goto st36;
            case 87:
                $sts[] = 36;
                goto st36;
            case 88:
                $sts[] = 36;
                goto st36;
            case 89:
                $sts[] = 36;
                goto st36;
            case 90:
                $sts[] = 36;
                goto st36;
            case 91:
                $sts[] = 36;
                goto st36;
            case 92:
                $sts[] = 36;
                goto st36;
            case 93:
                $sts[] = 36;
                goto st36;
            case 94:
                $sts[] = 36;
                goto st36;
            case 96:
                $sts[] = 36;
                goto st36;
            case 97:
                $sts[] = 36;
                goto st36;
            case 99:
                $sts[] = 188;
                goto st188;
            case 101:
                $sts[] = 36;
                goto st36;
            case 102:
                $sts[] = 36;
                goto st36;
            case 127:
                $sts[] = 36;
                goto st36;
            case 129:
                $sts[] = 36;
                goto st36;
            case 182:
                $sts[] = 36;
                goto st36;
            case 191:
                $sts[] = 36;
                goto st36;
            case 198:
                $sts[] = 36;
                goto st36;
            case 206:
                $sts[] = 36;
                goto st36;
            case 208:
                $sts[] = 137;
                goto st137;
            case 209:
                $sts[] = 36;
                goto st36;
            case 210:
                $sts[] = 36;
                goto st36;
            case 211:
                $sts[] = 36;
                goto st36;
            case 214:
                $sts[] = 36;
                goto st36;
            case 215:
                $sts[] = 36;
                goto st36;
            case 217:
                $sts[] = 36;
                goto st36;
            case 218:
                $sts[] = 36;
                goto st36;
            case 219:
                $sts[] = 36;
                goto st36;
            case 221:
                $sts[] = 36;
                goto st36;
            case 240:
                $sts[] = 36;
                goto st36;
            case 243:
                $sts[] = 36;
                goto st36;
            case 245:
                $sts[] = 36;
                goto st36;
            case 247:
                $sts[] = 36;
                goto st36;
            case 252:
                $sts[] = 36;
                goto st36;
            case 256:
                $sts[] = 36;
                goto st36;
            case 257:
                $sts[] = 36;
                goto st36;
            case 263:
                $sts[] = 36;
                goto st36;
            case 264:
                $sts[] = 36;
                goto st36;
            case 268:
                $sts[] = 36;
                goto st36;
            case 269:
                $sts[] = 36;
                goto st36;
            case 271:
                $sts[] = 36;
                goto st36;
        }
        gt6:
        switch ($sts[count($sts) - 1]) {
            case 9:
                $sts[] = 98;
                goto st98;
            case 127:
                $sts[] = 199;
                goto st199;
            case 129:
                $sts[] = 204;
                goto st204;
            case 182:
                $sts[] = 216;
                goto st216;
            case 198:
                $sts[] = 224;
                goto st224;
            case 217:
                $sts[] = 236;
                goto st236;
            case 218:
                $sts[] = 237;
                goto st237;
            case 243:
                $sts[] = 254;
                goto st254;
            case 247:
                $sts[] = 258;
                goto st258;
            case 256:
                $sts[] = 265;
                goto st265;
            case 257:
                $sts[] = 266;
                goto st266;
            case 264:
                $sts[] = 270;
                goto st270;
        }
        gt7:
        switch ($sts[count($sts) - 1]) {
            case 34:
                $sts[] = 127;
                goto st127;
            case 35:
                $sts[] = 129;
                goto st129;
            case 95:
                $sts[] = 182;
                goto st182;
            case 126:
                $sts[] = 198;
                goto st198;
        }
        gt8:
        switch ($sts[count($sts) - 1]) {
            case 37:
                $sts[] = 130;
                goto st130;
        }
        gt9:
        switch ($sts[count($sts) - 1]) {
            case 38:
                $sts[] = 133;
                goto st133;
            case 99:
                $sts[] = 133;
                goto st133;
        }
        gt10:
        switch ($sts[count($sts) - 1]) {
            case 38:
                $sts[] = 135;
                goto st135;
            case 99:
                $sts[] = 135;
                goto st135;
            case 208:
                $sts[] = 230;
                goto st230;
        }
        gt11:
        switch ($sts[count($sts) - 1]) {
            case 54:
                $sts[] = 141;
                goto st141;
        }
        gt12:
        switch ($sts[count($sts) - 1]) {
            case 101:
                $sts[] = 190;
                goto st190;
        }
        gt13:
        switch ($sts[count($sts) - 1]) {
            case 128:
                $sts[] = 200;
                goto st200;
        }
        gt14:
        switch ($sts[count($sts) - 1]) {
            case 128:
                $sts[] = 202;
                goto st202;
            case 226:
                $sts[] = 242;
                goto st242;
        }
        gt15:
        switch ($sts[count($sts) - 1]) {
            case 241:
                $sts[] = 248;
                goto st248;
            case 249:
                $sts[] = 261;
                goto st261;
        }
        gt16:
        switch ($sts[count($sts) - 1]) {
            case 241:
                $sts[] = 251;
                goto st251;
            case 248:
                $sts[] = 260;
                goto st260;
            case 249:
                $sts[] = 251;
                goto st251;
            case 261:
                $sts[] = 260;
                goto st260;
        }
    }
    protected abstract function arrayPush($p0, $p1);
    protected abstract function arrayOf($p0);
    protected abstract function emptyArray($p0);
    protected abstract function reduceCodeBlock($p0);
    protected abstract function reduceSingleStatementCodeBlock($p0);
    protected abstract function reduceExpressionStatement($p0);
    protected abstract function reduceFunctionDeclarationStatement($p0, $p1, $p2);
    protected abstract function reduceIfStatement($p0, $p1, $p2 = null);
    protected abstract function reduceWhileStatement($p0, $p1);
    protected abstract function reduceDoWhileStatement($p0, $p1);
    protected abstract function reduceForStatement($p0, $p1, $p2, $p3);
    protected abstract function reduceSwitchStatement($p0, $p1 = null);
    protected abstract function reduceSwitchCase($p0, $p1 = null);
    protected abstract function reduceSwitchDefault($p0, $p1 = null);
    protected abstract function reduceReturnStatement($p0, $p1 = null);
    protected abstract function reduceBreakStatement($p0, $p1 = null);
    protected abstract function reduceContinueStatement($p0, $p1 = null);
    protected abstract function reduceParenExpression($p0);
    protected abstract function reduceMemberAccessExpression($p0, $p1);
    protected abstract function reduceComputedMemberAccessExpression($p0, $p1);
    protected abstract function reduceVariableAccessExpression($p0);
    protected abstract function reduceNewExpression($p0);
    protected abstract function reduceFunctionCallExpression($p0, $p1 = null);
    protected abstract function reducePostfixIncrementExpression($p0);
    protected abstract function reducePostfixDecrementExpression($p0);
    protected abstract function reduceNotExpression($p0);
    protected abstract function reduceBitwiseNotExpression($p0);
    protected abstract function reduceUnaryPlusExpression($p0);
    protected abstract function reduceUnaryNegationExpression($p0);
    protected abstract function reducePrefixIncrementExpression($p0);
    protected abstract function reducePrefixDecrementExpression($p0);
    protected abstract function reduceTypeofExpression($p0);
    protected abstract function reduceVoidExpression($p0);
    protected abstract function reduceDeleteExpression($p0);
    protected abstract function reduceAwaitExpression($p0);
    protected abstract function reduceYieldExpression($p0);
    protected abstract function reduceYieldStarExpression($p0);
    protected abstract function reduceExponentExpression($p0, $p1);
    protected abstract function reduceMultiplyExpression($p0, $p1);
    protected abstract function reduceDivideExpression($p0, $p1);
    protected abstract function reduceModuloExpression($p0, $p1);
    protected abstract function reduceAddExpression($p0, $p1);
    protected abstract function reduceSubtractExpression($p0, $p1);
    protected abstract function reduceBitwiseLeftShiftExpression($p0, $p1);
    protected abstract function reduceBitwiseRightShiftExpression($p0, $p1);
    protected abstract function reduceBitwiseUnsignedRightShiftExpression($p0, $p1);
    protected abstract function reduceLessThanExpression($p0, $p1);
    protected abstract function reduceLessThanOrEqualExpression($p0, $p1);
    protected abstract function reduceGreaterThanExpression($p0, $p1);
    protected abstract function reduceGreaterThanOrEqualExpression($p0, $p1);
    protected abstract function reduceInExpression($p0, $p1);
    protected abstract function reduceInstanceofExpression($p0, $p1);
    protected abstract function reduceEqualityExpression($p0, $p1);
    protected abstract function reduceInqualityExpression($p0, $p1);
    protected abstract function reduceStrictEqualityExpression($p0, $p1);
    protected abstract function reduceStrictInqualityExpression($p0, $p1);
    protected abstract function reduceBitwiseAndExpression($p0, $p1);
    protected abstract function reduceBitwiseXorExpression($p0, $p1);
    protected abstract function reduceBitwiseOrExpression($p0, $p1);
    protected abstract function reduceLogicalAndExpression($p0, $p1);
    protected abstract function reduceLogicalOrExpression($p0, $p1);
    protected abstract function reduceAssignmentExpression($p0, $p1);
    protected abstract function reduceAddAssignmentExpression($p0, $p1);
    protected abstract function reduceSubtractAssignmentExpression($p0, $p1);
    protected abstract function reduceExponentAssignmentExpression($p0, $p1);
    protected abstract function reduceMultiplyAssignmentExpression($p0, $p1);
    protected abstract function reduceDivideAssignmentExpression($p0, $p1);
    protected abstract function reduceModuloAssignmentExpression($p0, $p1);
    protected abstract function reduceBitwiseLeftShiftAssignmentExpression($p0, $p1);
    protected abstract function reduceBitwiseRightShiftAssignmentExpression($p0, $p1);
    protected abstract function reduceBitwiseUnsignedRightShiftAssignmentExpression($p0, $p1);
    protected abstract function reduceBitwiseAndAssignmentExpression($p0, $p1);
    protected abstract function reduceBitwiseXorAssignmentExpression($p0, $p1);
    protected abstract function reduceBitwiseOrAssignmentExpression($p0, $p1);
    protected abstract function reduceConditionalExpression($p0, $p1, $p2);
    protected abstract function reduceIntegerNumberExpression($p0);
    protected abstract function reduceFloatNumberExpression($p0);
    protected abstract function reduceOctalNumberExpression($p0);
    protected abstract function reduceNamedFunctionExpression($p0, $p1, $p2);
    protected abstract function reduceAnonymousFunctionExpression($p0, $p1);
    protected abstract function reduceDoubleQuotedStringExpression($p0);
    protected abstract function reduceSingleQuotedStringExpression($p0);
    protected abstract function reduceArray($p0);
    protected abstract function reduceObject($p0);
    protected abstract function reduceObjectItem($p0, $p1);
    protected abstract function reduceConstantExpression($p0);
    protected abstract function reduceParameterNode($p0);
}