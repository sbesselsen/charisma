operator DOT 19 left
operator BLOCK_OPEN 19 left
operator PAREN_OPEN 19 left

operator NEW_ 18 right

operator INCREMENT 17 nonassoc
operator DECREMENT 17 nonassoc

operator NOT 16 right
operator TILDE 16 right
operator UNARY_PLUS 16 right
operator UNARY_NEGATION 16 right
operator PREFIX_INCREMENT 16 right
operator PREFIX_DECREMENT 16 right
operator TYPEOF_ 16 right
operator VOID_ 16 right
operator DELETE_ 16 right
operator AWAIT_ 16 right

;
; Expressions.
;
Expression -> MemberAccessExpression
    | ComputedMemberAccessExpression
    | VariableAccessExpression
    | FunctionCallExpression
    | ParenExpression
    | NewExpression
    | ValueExpression

;
; Paren expression.
;
ParenExpression -> PAREN_OPEN Expression PAREN_CLOSE { reduceParenExpression($1) }

;
; Member access expression.
;
MemberAccessExpression -> Expression DOT IDENTIFIER { reduceMemberAccessExpression($0, $2) }

;
; Computed member access expression.
;
ComputedMemberAccessExpression -> Expression BLOCK_OPEN Expression BLOCK_CLOSE { reduceComputedMemberAccessExpression($0, $2) }

;
; Variable access expression.
;
VariableAccessExpression -> IDENTIFIER { reduceVariableAccessExpression($0) }

;
; New expression.
;
NewExpression -> NEW_ Expression { reduceNewExpression($1) }

;
; Function call expression.
;
FunctionCallExpression -> Expression PAREN_OPEN ArgumentList PAREN_CLOSE { reduceFunctionCallExpression($0, $2) }
    | Expression PAREN_OPEN PAREN_CLOSE { reduceFunctionCallExpression($0) }

;
; Postfix increment/decrement expression.
;
Expression -> Expression INCREMENT { reducePostfixIncrementExpression($0) }
Expression -> Expression DECREMENT { reducePostfixDecrementExpression($0) }

;
; All of the unary expression operators.
;
Expression -> NOT Expression { reduceNotExpression($1) }
    | TILDE Expression { reduceBitwiseNotExpression($1) }
    | UNARY_PLUS Expression { reduceUnaryPlusExpression($1) }
    | UNARY_NEGATION Expression { reduceUnaryNegationExpression($1) }
    | PREFIX_INCREMENT Expression { reducePrefixIncrementExpression($1) }
    | PREFIX_DECREMENT Expression { reducePrefixDecrementExpression($1) }
    | TYPEOF_ Expression { reduceTypeofExpression($1) }
    | VOID_ Expression { reduceVoidExpression($1) }
    | DELETE_ Expression { reduceDeleteExpression($1) }
    | AWAIT_ Expression { reduceAwaitExpression($1) }

;
; Number expressions.
;
ValueExpression -> NumberExpression
NumberExpression -> NUMBER_INTEGER { reduceIntegerNumberExpression }
    | NUMBER_FLOAT { reduceFloatNumberExpression }
    | NUMBER_OCTAL { reduceOctalNumberExpression }

;
; String expressions.
ObjectLikeValueExpression -> StringExpression
StringExpression -> STRING_DOUBLEQUOTE { reduceDoubleQuotedStringExpression($0) }
    | STRING_SINGLEQUOTE { reduceSingleQuotedStringExpression($0) }
